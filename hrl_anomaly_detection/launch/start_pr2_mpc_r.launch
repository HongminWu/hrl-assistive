<launch>
    <group ns="right" >
      <arg name="arm" default="r"/>
      <arg name="verbose" default="True" />

      <rosparam command="load" file="$(find hrl_anomaly_detection)/params/mpc_params_pr2.yaml" />
      <rosparam command="load" file="$(find hrl_anomaly_detection)/params/pr2_config_params_r.yaml" />


      <!--<node name="mpc_teleop" pkg="hrl_haptic_mpc" type="mpc_teleop_rviz.py" args="-r pr2 -a $(arg arm) - -orientation" output="screen"/>-->
      <node pkg="pr2_arm_kinematics" type="pr2_arm_kinematics_node" name="pr2_left_arm_kinematics" output="screen">
       <param name="tip_name" value="r_wrist_roll_link" />
       <param name="root_name" value="torso_lift_link" />
      </node>
      <node name="waypoint_generator" pkg="hrl_haptic_mpc" type="waypoint_generator.py" args="-r pr2 -s fabric -a $(arg arm)" output="screen"/>
      <node name="robot_haptic_state" pkg="hrl_haptic_mpc" type="robot_haptic_state_node.py" args="-r pr2 -s fabric -a $(arg arm)" output="screen"/>
      <node name="haptic_mpc" pkg="hrl_haptic_mpc" type="haptic_mpc.py" args="-r pr2 -a $(arg arm) -v $(arg verbose)" output="screen"/>

      <node name="arm_server" pkg="hrl_anomaly_detection" type="arm_reacher_server.py" args="" output="screen"/>

    </group>

</launch>
