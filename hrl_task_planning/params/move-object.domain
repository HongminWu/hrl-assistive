(define (domain move-object)
 (:requirements :typing :conditional-effects)
 (:types 
  object
  gripper
 )

 (:constants right-gripper - gripper
             left-gripper - gripper
 )

 (:predicates
  (empty ?g - gripper)
  (can-grasp ?g - gripper ?o - object)
  (grasping ?g - gripper ?o - object)
  (at-goal ?o - object)
 )

 (:action pick
  :parameters (?g - gripper ?o - object)
  :precondition (and (empty ?g) (can-grasp ?g ?o) (not (at-goal ?o)))
  :effect (and (grasping ?g ?o)
               (not (empty ?g))
               (forall (?og - gripper)
                 (when (not (= ?og ?g))
                       (not (can-grasp ?og ?o))
                 )
               )
           )
 )

 (:action place
  :parameters (?g - gripper ?o - object)
  :precondition (and (grasping ?g ?o))
  :effect (and (empty ?g) 
               (at-goal ?o)
               (not (grasping ?g ?o))
          )
 )
)
