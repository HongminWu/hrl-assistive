<launch>
  <include file="$(find pr2_machine)/$(env ROBOT).machine" />

  <!-- Bring up the tilt_laser aware version of move_base -->
  <node pkg="hrl_base_selection" name="pr2_move_base_node" type="pr2_move_base.py" machine="c1" output="screen"/>

  <!-- Trajectory generator -->
  <node pkg="joint_trajectory_generator" type="joint_trajectory_generator" output="screen"
        name="joint_trajectory_generator" ns="r_arm_controller" >
    <param name="max_acc" value="2.0" />
    <param name="max_vel" value="2.5" />
  </node>
  <node pkg="joint_trajectory_generator" type="joint_trajectory_generator" output="screen"
        name="joint_trajectory_generator" ns="l_arm_controller" >
    <param name="max_acc" value="2.0" />
    <param name="max_vel" value="2.5" />
  </node>

  <!-- tuckarm action -->
  <node pkg="pr2_tuck_arms_action" type="tuck_arms.py" name="tuck_arms_action" output="screen">
    <param name="r_joint_trajectory_action" value="r_arm_controller/joint_trajectory_generator" />
    <param name="l_joint_trajectory_action" value="l_arm_controller/joint_trajectory_generator" />
    <param name="move_duration" value="0.0" />
  </node>

  <!-- Throttle the voxel grid that is being published for rviz -->
  <node ns="move_base_node/local_costmap" name="voxel_grid_throttle" pkg="topic_tools" type="throttle" machine="c1" args="messages voxel_grid 3.0 voxel_grid_throttled" output="screen"/>

  <node pkg="move_base" type="move_base" name="move_base_node" machine="c1" output="screen">
    <remap from="odom" to="base_odometry/odom" />
    <!--<remap from="cmd_vel" to="navigation/cmd_vel" />-->
    <!--<remap from="cmd_vel" to="pr2_move_base/goal" />-->
    <remap from="cmd_vel" to="base_controller/command" />

    <!-- Use the dwa local planner for the PR2 -->
    <!--<param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />-->

    <!-- Load common configuration files -->
    <rosparam file="$(find hrl_base_selection)/config/move_base_params.yaml" command="load" />
    <rosparam file="$(find hrl_base_selection)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find hrl_base_selection)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find hrl_base_selection)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find hrl_base_selection)/config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find hrl_base_selection)/config/dwa_local_planner_params.yaml" command="load" />
    <rosparam file="$(find hrl_base_selection)/config/recovery_behaviors.yaml" command="load" />
    <rosparam file="$(find hrl_base_selection)/config/global_planner_params.yaml" command="load" />
    <rosparam file="$(find hrl_base_selection)/config/navfn_global_planner_params.yaml" command="load" />
    <!-- Load global navigation specific parameters -->

  </node>

</launch>
